1+1
if true then false else true;

#succ & pred
succ(1) -> 2
pred(1) -> 0

2+2*2 #not value
6 #value

#one step evaluation
2+2*2 -> 2+4 -> 6 
2+(1+3+1) -> 2+(4+1) -> 2+5 -> 7
if true then 1 else 2 -> 1
if false then 1 else 2 -> 2

#normal form
2+2*2 -> 2+4 -> 6 # 6 is normal form, others are not
if 1 then 2 else 3 # in normal form

#value
4 # is value
4a # is not value
if true then 1 else 2 #not value
true #value
false #value

#stuck terms
2a + 3b #stuck term, not value
if 1 then 2 else 3 #stuck term, not value
1 #value, not stuck term
#every term in normal form that is not a value is stuck term

#

#evaluation rules, page 34
if true then 1 else 2 -> 1 #E-IfTrue
if false then 1 else 2 -> 2 #E-IfFalse


if (if true then true else false) then 1 else 2 -> if true then 1 else 2 ... #E-If

if t1 then t2 else t3
t1 = if true then true else false
t2 = 1
t3 = 2

if true then true else false -> true
_________________________________________________
if (if true then true else false) then 1 else 2 ->
    if true then 1 else 2


#new rules, page 41
succ (if true then 1 else 0) -> succ 1 -> 2 #E-succ
succ(pred 2) -> succ(1) -> 2
succ(pred 0) -> succ(0) -> 1 # 0 != 1
if iszero0 then succ 2 else (succ true)-> if true the succ2 else (succ true) ->
    succ 2 -> 3
#succ true is stuck, but if statement is not!!!!

#new custom rules, exmaple
Syntax
t :== ...
      test t

evaluation
test v -> 1 #every value gives 

#3.5.18
t1 -> t1'
_________________________________________________
if t1 then v1 else v2 -> if t1' then v1 else v2

t2 -> t2'
_________________________________________________
if t1 then t2 else t3 -> if t1 then t2' else t3

t3 -> t3'
_________________________________________________
if t1 then t2 else t3 -> if t1 then t2 else t3'

succ(succ(2)) -> succ(3) #succ(3) can be t2' but it is not a value

#example
if iszero(2) then succ(succ(3)) else pred(succ(2)) -> if iszero(2) then succ(4) else pred(succ(2)) ->
    if iszero(2) then 5 else pred(succ(2)) ->* 2

#big step evaluation
2+2*2 = 6
2+2*2 ->* 6


#3.5.16, page 496
g - is stuck term
case 1:
    g is [true, false, 0, 1, 2.......] impossible

case 2:
    g = if t1 then t2 else t3:
    g is stuck -> t1 is in normal form
    subcase a:
        t1 is value -> numeric or wrong
        There is a rule E-If-Wrong rules

    subacase b:
        t1 = succ(t)
            t is true, false, or wrong. #there is such rule, E-Succ-Wrong
            t is not value -> t is also stuck -> we assume that t must have been evaluated to wrong
            rule E-Succ-Wrong

    subcase c:
        t1 = pred(t)
        same as subcase b

    subcase d:
        t1 = iszero(t)
        same as subcase

    for t2 and t3 we assume that they will be evaluated to wrong the same way
